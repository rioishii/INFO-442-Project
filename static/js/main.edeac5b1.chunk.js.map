{"version":3,"sources":["components/chores/ChoreSummary.js","components/chores/UserCard.js","components/chores/ChoreList.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/Navbar.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/auth/SignUp.js","components/chores/CreateChore.js","store/actions/choreActions.js","components/history/HistorySummary.js","components/history/HistoryList.js","components/history/History.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/choreReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["ChoreSummary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","deleteChore","choreId","userId","firestore","getFirestore","collection","doc","delete","get","then","snapshot","data","choreCount","update","toggle","completeChore","complete","state","open","completeModalOpen","bind","assertThisInitialized","toggleCompleteModal","setState","prevState","_this2","chore","user","assignedFirstName","firstName","assignedLastName","lastName","react_default","a","createElement","className","id","onClick","title","moment","date","toDate","format","authorFirstName","authorLastName","createdAt","calendar","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","authorId","Component","UserCard","deleteUser","auth","uid","firebase","signOut","concat","ChoreList","_ref","chores","UserCard_UserCard","map","chores_ChoreSummary","key","connect","dispatch","getState","_ref2","getFirebase","type","react_router_dom","to","profile","initials","links","layout_SignedInLinks","Dashboard","houseName","_this$props","users","react_router","userAndChores","forEach","push","chores_ChoreList","layout_Navbar","compose","ordered","firestoreConnect","orderBy","SignIn","email","password","handleChange","e","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","length","window","alert","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","houseNames","docs","keys","includes","roommates","updatedList","add","set","CreateChore","name","createChore","history","handleDateChange","Date","assigned","userOptions","MenuItem","material_ui_pickers_esm","utils","MomentUtils","minDate","FormControl","InputLabel","Select","inputProps","HistorySummary","HistoryList","history_HistorySummary","History","history_HistoryList","App","exact","path","component","Boolean","location","hostname","match","initState","authReducer","arguments","undefined","action","objectSpread","console","log","message","content","choreReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","react_redux_es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edeac5b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport { getFirestore } from 'redux-firestore';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass ChoreSummary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            completeModalOpen: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n        this.toggleCompleteModal = this.toggleCompleteModal.bind(this);\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            open: !prevState.open\n        }));\n    }\n\n    toggleCompleteModal() {\n        this.setState(prevState => ({\n            completeModalOpen: !prevState.completeModalOpen\n        }));\n    }\n\n    deleteChore = (choreId, userId) => {\n        const firestore = getFirestore();\n        firestore.collection('chores').doc(choreId).delete();\n        firestore.collection('users').doc(userId).get()\n            .then(snapshot => {\n                return snapshot.data().choreCount - 1;\n            }).then(choreCount => {\n                firestore.collection('users').doc(userId).update({\n                    choreCount\n                });\n                // console.log('Chore successfully deleted!');\n            });\n        this.toggle();\n    }\n\n    completeChore = (choreId, userId) => {\n        const firestore = getFirestore();\n        firestore.collection('chores').doc(choreId).update({\n            complete: true\n        });\n    }\n\n    render() {\n        let chore = this.props.chore;\n        let user = this.props.user;\n        let content;\n        // chore must match with the author's first and last name, and chore must not be complete\n        if (chore.assignedFirstName === user.firstName && chore.assignedLastName === user.lastName && !chore.complete) {\n            content = (\n                <div className=\"card z-depth chore-summary\">\n                    <button id=\"completeChoreBtn\" onClick={this.toggleCompleteModal}>\n                        &#10003;\n                    </button>\n                    <button id=\"deleteChoreBtn\" onClick={this.toggle}>\n                        &times;\n                    </button>\n                    <div className=\"card-content grey-text text-darken-3\">\n                        <span className=\"card-title\">\n                            {chore.title}\n                        </span>\n                        <span className=\"card-title\">\n                            Due By: \n                            <br></br>\n                            {moment(chore.date.toDate()).format('dddd, LL')}\n                        </span>\n                        <p>\n                            Assigned to: {chore.assignedFirstName} {chore.assignedLastName}\n                        </p>\n                        <p>\n                            Posted by: {chore.authorFirstName} {chore.authorLastName}\n                        </p>\n                        <p className=\"grey-text\">\n                            Created: {moment(chore.createdAt.toDate()).calendar()}\n                        </p>\n                    </div>\n\n                    {/* Deletion dialog */}\n                    <Dialog open={this.state.open}>\n                        <DialogTitle id=\"alert-dialog-title\">\n                            {\"Confirmation\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Are you sure you want to delete this chore?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.toggle}>\n                                No\n                            </Button>\n                            <Button onClick={(choreId, userId) => this.deleteChore(chore.id, chore.authorId)}>\n                                Yes\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n\n                    {/* Completion dialog */}\n                    <Dialog open={this.state.completeModalOpen}>\n                        <DialogTitle id=\"alert-dialog-title\">\n                            {\"Confirmation\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Are you sure this chore is completed?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.toggleCompleteModal}>\n                                No\n                            </Button>\n                            <Button onClick={(choreId, userId) => this.completeChore(chore.id, chore.authorId)}>\n                                Yes\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )\n        } else {\n            content = <div></div>\n        }\n        return (content)\n    }\n}\n\nexport default ChoreSummary","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getFirestore } from 'redux-firestore';\nimport firebase from 'firebase/app';\n\nexport default class UserCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            open: !prevState.open\n        }));\n    }\n\n    deleteUser = (userId) => {\n        const firestore = getFirestore();\n        let auth = this.props.auth;\n        if (userId === auth.uid) {\n            firebase.auth().signOut().then(() => {\n                firestore.collection('users').doc(userId).delete();\n            });\n        } else {\n            firestore.collection('users').doc(userId).delete();\n        }\n    }\n\n    render() {\n        let user = this.props.user;\n        return(\n            <div className=\"card z-depth chore-summary\">\n                <button id=\"deleteChoreBtn\" onClick={this.toggle}>\n                    &times;\n                </button>\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title user-card-title\">{`${user.firstName} ${user.lastName}`}</span>\n                    <div className=\"user-card-underline\"></div>\n                </div>\n\n                {/* Deletion dialog */}\n                <Dialog open={this.state.open}>\n                    <DialogTitle id=\"alert-dialog-title\">\n                        {\"Confirmation\"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Are you sure you want to delete this user?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.toggle}>\n                            No\n                        </Button>\n                        <Button onClick={(userId) => this.deleteUser(user.id)}>\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ChoreSummary from './ChoreSummary';\nimport UserCard from './UserCard';\n\nconst ChoreList = ({chores, user, auth}) => {\n    return (\n        <div>\n            <div className=\"chore-list section\">\n                <UserCard user={user} auth={auth}/>\n                { chores && chores.map(chore => {\n                    return (\n                        <ChoreSummary chore={chore} key={chore.id} user={user}/>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default ChoreList","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create' className=\"cream-txt\">New Chore</NavLink></li>\n            <li><NavLink to='/history' className='cream-txt'>History</NavLink></li>\n            <li><a onClick={props.signOut} className=\"cream-txt\">Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating cream-bg blue-txt lighten-1'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks) ","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        })\n    }\n} \n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\n        });\n\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            // add user into the house if the house already exists\n            let houseNames = {};\n            firestore.collection('houses').get()\n                .then(snapshot => {\n                    snapshot.docs.forEach(doc => {\n                        houseNames[doc.data().houseName] = doc.id;\n                    });\n                }).then(() => {\n                    if (Object.keys(houseNames).includes(newUser.houseName)) {\n                        firestore.collection('houses').doc(houseNames[newUser.houseName]).get()\n                            .then(snapshot => {\n                                return snapshot.data().roommates;\n                            }).then(roommates => {\n                                let updatedList = roommates;\n                                updatedList.push(resp.user.uid);\n                                firestore.collection('houses').doc(houseNames[newUser.houseName]).update({\n                                    roommates: updatedList\n                                });\n                            });\n                    } else {\n                        firestore.collection('houses').add({\n                            houseName: newUser.houseName,\n                            roommates: [resp.user.uid]\n                        });\n                    }\n                });\n\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n                houseName: newUser.houseName,\n                choreCount: 0\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <div />\n    return (\n        <nav className=\"nav-wrapper blue-bg darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo cream-txt\">Room & Chored</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React, { Component } from 'react';\nimport ChoreList from '../chores/ChoreList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from '../layout/Navbar';\nimport { getFirestore } from 'redux-firestore';\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            houseName: ''\n        }\n    }\n    render() {\n        const { chores, users, auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        let userAndChores = [];\n\n        const firestore = getFirestore()\n        firestore.collection('users').doc(auth.uid).get()\n            .then(snapshot => {\n                this.setState({\n                    houseName: snapshot.data().houseName\n                });\n            });\n\n        if (users && users.forEach(user => {\n            if (user.houseName === this.state.houseName) {\n                userAndChores.push(\n                    // \"key\" was put in here to put away warnings in Google Chrome console\n                    <div className=\"col s4\" key={user.id}> \n                        <ChoreList chores={chores} user={user} auth={auth}/>\n                    </div>\n                )\n            }\n        }));\n\n        return (\n            <div>\n                <Navbar />\n                <div className=\"dashboard container\">\n                    <div className=\"row\">\n                        {userAndChores}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.firestore.ordered.users,\n        chores: state.firestore.ordered.chores,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'users', orderBy: ['choreCount', 'desc'] }\n    ]),\n    firestoreConnect([\n        {collection: 'chores', orderBy: ['createdAt', 'desc']}\n    ])\n)(Dashboard)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect, NavLink } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n\n        return (\n            <div>\n                <div id=\"auth-flex\">\n                    <div>\n                        <h3 className=\"side-margins wrapless\">Room & Chored</h3>\n                        <p className=\"marginless\">Making sure everyone does their fair share.</p>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                        <p className=\"marginless\">Don't have an account?</p>\n                        <NavLink to='/signup' className=\"width-40\">\n                            <button className=\"btn lighten-1 z-depth-0 blue-txt cream-bg width-100\">\n                                Sign Up\n                            </button>\n                        </NavLink>\n                    </div>\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n                            <h4>Welcome!</h4>\n                            <br></br>\n                            <div className=\"input-field\">\n                                <label className=\"blue-trans-txt\" htmlFor=\"email\">Email</label>\n                                <input type=\"email\" id=\"email\" className=\"unfocused-input\" onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"input-field\">\n                                <label className=\"blue-trans-txt\" htmlFor=\"password\">Password</label>\n                                <input type=\"password\" id=\"password\" className=\"unfocused-input\" onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"input-field\">\n                                <button className=\"btn lighten-1 z-depth-0 cream-txt blue-bg width-100\">\n                                    Sign In\n                                </button>\n                                <div className=\"red-text center\">\n                                    { authError ? <p>{authError}</p> : null}\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\nimport { NavLink } from 'react-router-dom';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        houseName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.houseName.length > 50) {\n            window.alert('House name is too long!');\n        } else {\n            this.props.signUp(this.state);\n        }\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n\n        return (\n            <div>\n                <div id=\"auth-flex\">\n                    <div>\n                        <h3 className=\"side-margins wrapless\">Room & Chored</h3>\n                        <p className=\"marginless\">Making sure everyone does their fair share.</p>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                        <p className=\"marginless\">Already have an account?</p>\n                        <NavLink to='/signin' className=\"width-40\">\n                            <button className=\"btn lighten-1 z-depth-0 blue-txt cream-bg width-100\">\n                                Sign In\n                            </button>\n                        </NavLink>\n                    </div>\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n                            <h4>New Roommate?</h4>\n                            <br></br>\n                            <div className=\"input-field\">\n                            <label className=\"blue-trans-txt\" htmlFor=\"firstName\">First Name</label>\n                            <input type=\"text\" id=\"firstName\" className=\"unfocused-input\" onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"input-field\">\n                                <label className=\"blue-trans-txt\" htmlFor=\"lastName\">Last Name</label>\n                                <input type=\"text\" id=\"lastName\" className=\"unfocused-input\" onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"input-field\">\n                                <label className=\"blue-trans-txt\" htmlFor=\"email\">Email</label>\n                                <input type=\"email\" id=\"email\" className=\"unfocused-input\" onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"input-field\">\n                                <label className=\"blue-trans-txt\" htmlFor=\"password\">Password</label>\n                                <input type=\"password\" id=\"password\" className=\"unfocused-input\" onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"input-field\">\n                                <label className=\"blue-trans-txt\" htmlFor=\"houseName\">House Name</label>\n                                <input type=\"text\" id=\"houseName\" className=\"unfocused-input\" onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"input-field\">\n                                <button className=\"btn lighten-1 z-depth-0 cream-txt blue-bg width-100\">\n                                    Sign Up\n                                </button>\n                                <div className=\"red-text center\">\n                                    { authError ? <p>{authError}</p> : null}\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createChore } from '../../store/actions/choreActions';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport Navbar from '../layout/Navbar';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { getFirestore } from 'redux-firestore';\n\n\nclass CreateChore extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            date: new Date(),\n            assigned: '',\n            houseName: ''\n        }\n    }\n\n    handleChange = (e) => {\n        if (e.target.name && e.target.name === 'assigned') {\n            this.setState({\n                [e.target.name]: e.target.value\n            });\n        } else {\n            this.setState({\n                [e.target.id]: e.target.value\n            });\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createChore(this.state);\n        this.props.history.push('/');\n    }\n\n    handleDateChange = (e) => {\n        let date = e.toDate();\n        this.setState({\n            date\n        })\n    }\n\n    render() {\n        const { auth, users } = this.props;\n\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        const firestore = getFirestore();\n        firestore.collection('users').doc(auth.uid).get()\n            .then(snapshot => {\n                this.setState({\n                    houseName: snapshot.data().houseName\n                });\n            });\n\n        let userOptions = [];\n        if (users) {\n            users.forEach(user => {\n                if (user.houseName === this.state.houseName) {\n                    userOptions.push(\n                        <MenuItem value={user}>{user.firstName} {user.lastName}</MenuItem>\n                    );\n                }\n            });\n        }\n\n        return (\n            <div id=\"chore-flex\">\n                <Navbar />\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <h4>Create New Chore</h4>\n                        <div className=\"input-field\">\n                            <label className=\"blue-trans-txt\" htmlFor=\"title\">Title</label>\n                            <input type=\"text\" id=\"title\" className=\"unfocused-input\" onChange={this.handleChange} />\n                        </div>\n                        <div className=\"input-field\">\n                            <label className=\"blue-trans-txt\" htmlFor=\"title\">Due Date</label>\n                            <MuiPickersUtilsProvider className=\"width-40\" utils={MomentUtils}>\n                                <DatePicker className=\"width-40\"\n                                    value={this.state.date}\n                                    onChange={date => this.handleDateChange(date)}\n                                    minDate={new Date()}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </div>\n                        <div className=\"input-field\">\n                            <label className=\"blue-trans-txt\" htmlFor=\"title\">Assign To</label>\n                            <FormControl className=\"underline width-40\">\n                                <InputLabel htmlFor=\"assigned\">Name</InputLabel>\n                                <Select\n                                    value={this.state.assigned}\n                                    onChange={this.handleChange}\n                                    inputProps={{\n                                        name: 'assigned',\n                                        id: 'assigned'\n                                    }}\n                                >\n                                    {userOptions}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <br></br>\n                        <div id=\"button-flex\" className=\"input-field\">\n                            <button className=\"btn lighten-1 z-depth-0 cream-txt blue-bg marginless\">\n                                Create\n                            </button>\n                            <NavLink to='/'>\n                                <button className=\"btn lighten-1 z-depth-0 blue-txt cream-bg blue-border marginless\">\n                                    Cancel\n                                </button>\n                            </NavLink>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        users: state.firestore.ordered.users\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createChore: (chore) => dispatch(createChore(chore))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateChore)\n","export const createChore = (chore) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const user = chore.assigned;\n        // const authorId = user.id;\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('chores').add({\n            title: chore.title,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            assignedFirstName: user.firstName,\n            assignedLastName: user.lastName,\n            authorId,\n            createdAt: new Date(),\n            date: chore.date,\n            complete: false\n        }).then(() => {\n            dispatch({ type: 'CREATE_CHORE', chore });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_CHORE_ERROR', err });\n        })\n        \n        // Updating chore count for each user\n        firestore.collection('users').doc(authorId).get()\n            .then(snapshot => {\n                return snapshot.data().choreCount + 1;\n            }).then(choreCount => {\n                firestore.collection('users').doc(authorId).update({\n                    choreCount\n                });\n                // console.log(choreCount);\n            });\n    }\n}","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass HistorySummary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            completeModalOpen: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            open: !prevState.open\n        }));\n    }\n\n    render() {\n        let chore = this.props.chore;\n        let user = this.props.user;\n        let content;\n        // chore must match with the author's first and last name, and chore must not be complete\n        if (chore.authorFirstName === user.firstName && chore.authorLastName === user.lastName && chore.complete) {\n            content = (\n                <div className=\"card z-depth chore-summary\">\n                    <div className=\"card-content grey-text text-darken-3\">\n                        <span className=\"card-title\">\n                            {chore.title}\n                        </span>\n                        <span className=\"card-title\">\n                            Due By: \n                            <br></br>\n                            {moment(chore.date.toDate()).format('dddd, LL')}\n                        </span>\n                        <p>\n                            Posted by {chore.authorFirstName} {chore.authorLastName}\n                        </p>\n                        <p className=\"grey-text\">\n                            {moment(chore.createdAt.toDate()).calendar()}\n                        </p>\n                    </div>\n                </div>\n            )\n        } else {\n            content = <div></div>\n        }\n        return (content)\n    }\n}\n\nexport default HistorySummary;","import React from 'react';\nimport HistorySummary from './HistorySummary';\nimport UserCard from '../chores/UserCard';\n\nconst HistoryList = ({chores, user}) => {\n    return (\n        <div>\n            <div className=\"chore-list section\">\n                <UserCard user={user}/>\n                { chores && chores.map(chore => {\n                    return (\n                        <HistorySummary chore={chore} key={chore.id} user={user}/>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default HistoryList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from '../layout/Navbar';\nimport HistoryList from './HistoryList';\nimport { NavLink } from 'react-router-dom';\nimport { getFirestore } from 'redux-firestore';\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            houseName: ''\n        }\n    }\n    render() {\n        // console.log(this.props);\n        const { chores, users, auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        let userAndChores = [];\n\n        const firestore = getFirestore()\n        firestore.collection('users').doc(auth.uid).get()\n            .then(snapshot => {\n                this.setState({\n                    houseName: snapshot.data().houseName\n                });\n            });\n\n        if (users && users.forEach(user => {\n            if (user.houseName === this.state.houseName) {\n                userAndChores.push(\n                    // \"key\" was put in here to put away warnings in Google Chrome console\n                    <div className=\"col s4\" key={user.id}>\n                        <HistoryList chores={chores} user={user} auth={auth} />\n                    </div>\n                )\n            }\n        }));\n\n        return (\n            <div>\n                <Navbar />\n                <NavLink id=\"backBtn\" to='/'>&#8629;</NavLink>\n                <div className=\"history container\">\n                    <div className=\"row\">\n                        {userAndChores}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        users: state.firestore.ordered.users,\n        chores: state.firestore.ordered.chores,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'users', orderBy: ['choreCount', 'desc'] }\n    ]),\n    firestoreConnect([\n        { collection: 'chores', orderBy: ['createdAt', 'desc'] }\n    ])\n)(History)","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateChore from './components/chores/CreateChore';\nimport History from './components/history/History';\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path='/' component={Dashboard} />\n                        <Route path='/signin' component={SignIn} />\n                        <Route path='/signup' component={SignUp} />\n                        <Route path='/create' component={CreateChore} />\n                        <Route path='/history' component={History} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initState = {\n    chores: [\n        { id: 1, title: 'Clean fridge', content: 'blah blah blah' },\n        { id: 2, title: 'Take recycling', content: 'blah blah blah' },\n        { id: 3, title: 'Mow the lawn', content: 'blah blah blah' }\n    ]\n}\n\nconst choreReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_CHORE':\n            console.log('created chore', action.chore);\n            return state\n        case 'CREATE_CHORE_ERROR':\n            console.log('created chore error', action.err);\n            return state\n        default:\n            return state\n    }\n}\n\nexport default choreReducer","import authReducer from './authReducer';\nimport choreReducer from './choreReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    chore: choreReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCCNFxIPBTcYB3UoC0oXcc1femR_vCjrNE\",\n    authDomain: \"roomnchored.firebaseapp.com\",\n    databaseURL: \"https://roomnchored.firebaseio.com\",\n    projectId: \"roomnchored\",\n    storageBucket: \"roomnchored.appspot.com\",\n    messagingSenderId: \"148134115781\",\n    appId: \"1:148134115781:web:40f830dc7d8eaeb7\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n});\n\n"],"sourceRoot":""}